{"version":3,"file":"static/js/115.d554c849.chunk.js","mappings":"qQAEaA,EAAWC,EAAAA,QAAAA,GAAH,gKAORC,EAAWD,EAAAA,QAAAA,GAAH,2DAKRE,EAAYF,EAAAA,QAAAA,GAAH,mE,kBC0BtB,EA/Ba,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAAMA,EAAY,mCAAG,qGACIC,EAAAA,EAAAA,IAAYJ,GADhB,OACbK,EADa,OAEnBN,EAAQM,GAFW,2CAAH,qDAKlB,OACE,SAACZ,EAAD,UACGK,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACf,EAAD,WACoB,OAAjBa,GACC,gBAAKG,IArBM,kCAqBgBH,EAAcI,IAAI,aAE7C,gBAAKD,IAAKE,EAAQ,QAEpB,SAACjB,EAAD,UAAYa,KACZ,uCAAeC,OAPFH,EADP,KAaf,C,+LCpCKO,EAAW,6BACXC,EAAa,mCAEbC,EAAqB,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAHpB,cAEpBV,EAFoB,yBAKnBA,EAASa,KAAKC,SALK,gCAO1BC,QAAQC,MAAR,MAP0B,yDAAH,qDAUrBC,EAAmB,mCAAG,WAAMC,GAAN,gGAEDN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACoDQ,EADpD,gCAFC,cAElBlB,EAFkB,yBAKjBA,EAASa,KAAKC,SALG,gCAOxBC,QAAQC,MAAR,MAPwB,yDAAH,sDAUnBG,EAAmB,mCAAG,WAAOxB,EAASyB,GAAhB,gGAEDR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEd,EADF,oBACqBe,EADrB,oBAFC,cAElBV,EAFkB,yBAKjBA,EAASa,MALQ,gCAOxBE,QAAQC,MAAR,MAPwB,qGAAH,wDAYnBjB,EAAW,mCAAG,WAAMJ,GAAN,gGAEOiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEd,EADF,4BAC6Be,EAD7B,oBAFP,cAEVV,EAFU,yBAKTA,EAASa,KAAKpB,MALL,gCAOhBsB,QAAQC,MAAR,MAPgB,yDAAH,sDAUXK,EAAc,mCAAG,WAAM1B,GAAN,gGAEIiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEd,EADF,4BAC6Be,EAD7B,oBAFJ,cAEbV,EAFa,yBAKZA,EAASa,KAAKC,SALF,gCAOnBC,QAAQC,MAAR,MAPmB,yDAAH,qD","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","service/axiosApiRequest.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  grid-gap: 16px;\n`;\n\nexport const CastItem = styled.li`\n  display: block;\n  width: 100%;\n`;\n\nexport const CastTitle = styled.h3`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n","/* eslint-disable jsx-a11y/alt-text */\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastItem, CastList, CastTitle } from './Cast.styled';\nimport 'react-slideshow-image/dist/styles.css';\nimport { castRequest } from 'service/axiosApiRequest';\n\nconst IMAGE_ENDPOINT = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    axiosRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const axiosRequest = async () => {\n    const response = await castRequest(movieId);\n    setCast(response);\n  };\n\n  return (\n    <CastList>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <CastItem key={id}>\n          {profile_path !== null ? (\n            <img src={IMAGE_ENDPOINT + profile_path} alt=\"portret\" />\n          ) : (\n            <img src={require('../icon/NoImg.jpg')} />\n          )}\n          <CastTitle>{name}</CastTitle>\n          <p>Character: {character}</p>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst KEY_REQUES = 'b8cc7192580846817e308e88dc3da3b8';\n\nconst trendingMoviesRequest = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/trending/movie/day?api_key=${KEY_REQUES}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst searchMoviesRequest = async productName => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/search/multi?api_key=${KEY_REQUES}&language=en-US&query=${productName}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst movieDetailsRequest = async (movieId, setPending) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}?api_key=${KEY_REQUES}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  } finally {\n    // setPending(false);\n  }\n};\nconst castRequest = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY_REQUES}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst reviewsRequest = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY_REQUES}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport {\n  trendingMoviesRequest,\n  castRequest,\n  searchMoviesRequest,\n  movieDetailsRequest,\n  reviewsRequest,\n};\n"],"names":["CastList","styled","CastItem","CastTitle","useState","cast","setCast","movieId","useParams","useEffect","axiosRequest","castRequest","response","map","id","profile_path","name","character","src","alt","require","BASE_URL","KEY_REQUES","trendingMoviesRequest","axios","data","results","console","error","searchMoviesRequest","productName","movieDetailsRequest","setPending","reviewsRequest"],"sourceRoot":""}