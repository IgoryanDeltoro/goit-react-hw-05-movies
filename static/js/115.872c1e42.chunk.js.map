{"version":3,"file":"static/js/115.872c1e42.chunk.js","mappings":"8QAEaA,EAAWC,EAAAA,QAAAA,GAAH,gKAORC,EAAWD,EAAAA,QAAAA,GAAH,2DAKRE,EAAYF,EAAAA,QAAAA,GAAH,mE,SCiCtB,EAtCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAAMA,EAAY,mCAAG,6GAEMC,EAAAA,EAAAA,IAAA,6CACiBJ,EADjB,qEAFN,OAEXK,EAFW,OAKjBC,QAAQC,IAAIF,GACZN,EAAQM,EAASG,KAAKV,MANL,gDAQjBQ,QAAQG,MAAR,MARiB,yDAAH,qDAYlB,OACE,SAAChB,EAAD,UACGK,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACnB,EAAD,WACoB,OAAjBiB,GACC,gBAAKG,IA5BM,kCA4BgBH,EAAcI,IAAI,aAE7C,gBAAKD,IAAKE,EAAQ,QAEpB,SAACrB,EAAD,UAAYiB,KACZ,uCAAeC,OAPFH,EADP,KAaf,C","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  grid-gap: 16px;\n`;\n\nexport const CastItem = styled.li`\n  display: block;\n  width: 100%;\n`;\n\nexport const CastTitle = styled.h3`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n","/* eslint-disable jsx-a11y/alt-text */\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastItem, CastList, CastTitle } from './Cast.styled';\nimport 'react-slideshow-image/dist/styles.css';\n\nconst IMAGE_ENDPOINT = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    axiosRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const axiosRequest = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=b8cc7192580846817e308e88dc3da3b8&language=en-US`\n      );\n      console.log(response);\n      setCast(response.data.cast);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <CastList>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <CastItem key={id}>\n          {profile_path !== null ? (\n            <img src={IMAGE_ENDPOINT + profile_path} alt=\"portret\" />\n          ) : (\n            <img src={require('../icon/NoImg.jpg')} />\n          )}\n          <CastTitle>{name}</CastTitle>\n          <p>Character: {character}</p>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastItem","CastTitle","useState","cast","setCast","movieId","useParams","useEffect","axiosRequest","axios","response","console","log","data","error","map","id","profile_path","name","character","src","alt","require"],"sourceRoot":""}