{"version":3,"file":"static/js/922.a83207da.chunk.js","mappings":"gRAEaA,EAAaC,EAAAA,QAAAA,IAAH,0CAGVC,EAAeD,EAAAA,QAAAA,EAAH,gDAGZE,EAAeF,EAAAA,QAAAA,GAAH,gDAGZG,EAAcH,EAAAA,QAAAA,KAAH,iE,SCkCxB,EAnCgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAAMA,EAAY,mCAAG,qGACIC,EAAAA,EAAAA,IAAeP,GADnB,OACbQ,EADa,OAEnBJ,EAAWI,GAFQ,2CAAH,qDAKlB,OACE,SAACb,EAAD,UACsB,IAAnBQ,EAAQM,QACP,8BACGN,EAAQO,KAAI,SAAAC,GAAE,OACb,4BACE,UAACb,EAAD,sBAAuBa,EAAGC,WAC1B,UAACf,EAAD,YACE,SAACE,EAAD,wBACCY,EAAGE,aAJEF,EAAGG,GADA,OAWjB,uEAIP,C,+LCzCKC,EAAW,6BACXC,EAAa,mCAEbC,EAAqB,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAHpB,cAEpBR,EAFoB,yBAKnBA,EAASW,KAAKC,SALK,gCAO1BC,QAAQC,MAAR,MAP0B,yDAAH,qDAUrBC,EAAmB,mCAAG,WAAMC,GAAN,gGAEDN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACoDQ,EADpD,gCAFC,cAElBhB,EAFkB,yBAKjBA,EAASW,KAAKC,SALG,gCAOxBC,QAAQC,MAAR,MAPwB,yDAAH,sDAUnBG,EAAmB,mCAAG,WAAMzB,GAAN,gGAEDkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEf,EADF,oBACqBgB,EADrB,oBAFC,cAElBR,EAFkB,yBAKjBA,EAASW,MALQ,gCAOxBE,QAAQC,MAAR,MAPwB,yDAAH,sDAUnBI,EAAW,mCAAG,WAAM1B,GAAN,gGAEOkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEf,EADF,4BAC6BgB,EAD7B,oBAFP,cAEVR,EAFU,yBAKTA,EAASW,KAAKQ,MALL,gCAOhBN,QAAQC,MAAR,MAPgB,yDAAH,sDAUXf,EAAc,mCAAG,WAAMP,GAAN,gGAEIkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEf,EADF,4BAC6BgB,EAD7B,oBAFJ,cAEbR,EAFa,yBAKZA,EAASW,KAAKC,SALF,gCAOnBC,QAAQC,MAAR,MAPmB,yDAAH,qD","sources":["components/rewiews/Rewiews.styled.js","components/rewiews/Reviews.jsx","service/axiosApiRequest.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsBox = styled.div`\n  padding: 15px;\n`;\nexport const RewiewsDescr = styled.p`\n  margin-bottom: 30px;\n`;\nexport const ReviewsTitle = styled.h2`\n  margin-bottom: 20px;\n`;\nexport const RewiewsSpan = styled.span`\n  font-size: 15px;\n  font-weight: 600;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { reviewsRequest } from 'service/axiosApiRequest';\nimport {\n  ReviewsBox,\n  ReviewsTitle,\n  RewiewsDescr,\n  RewiewsSpan,\n} from './Rewiews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    axiosRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const axiosRequest = async () => {\n    const response = await reviewsRequest(movieId);\n    setReviews(response);\n  };\n\n  return (\n    <ReviewsBox>\n      {reviews.length !== 0 ? (\n        <>\n          {reviews.map(el => (\n            <div key={el.id}>\n              <ReviewsTitle>Author: {el.author}</ReviewsTitle>\n              <RewiewsDescr>\n                <RewiewsSpan>Content: </RewiewsSpan>\n                {el.content}\n              </RewiewsDescr>\n            </div>\n          ))}\n        </>\n      ) : (\n        <h3>We don't have any reviews for this movie.</h3>\n      )}\n    </ReviewsBox>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst KEY_REQUES = 'b8cc7192580846817e308e88dc3da3b8';\n\nconst trendingMoviesRequest = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/trending/movie/day?api_key=${KEY_REQUES}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst searchMoviesRequest = async productName => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/search/multi?api_key=${KEY_REQUES}&language=en-US&query=${productName}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst movieDetailsRequest = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}?api_key=${KEY_REQUES}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst castRequest = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY_REQUES}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst reviewsRequest = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY_REQUES}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport {\n  trendingMoviesRequest,\n  castRequest,\n  searchMoviesRequest,\n  movieDetailsRequest,\n  reviewsRequest,\n};\n"],"names":["ReviewsBox","styled","RewiewsDescr","ReviewsTitle","RewiewsSpan","movieId","useParams","useState","reviews","setReviews","useEffect","axiosRequest","reviewsRequest","response","length","map","el","author","content","id","BASE_URL","KEY_REQUES","trendingMoviesRequest","axios","data","results","console","error","searchMoviesRequest","productName","movieDetailsRequest","castRequest","cast"],"sourceRoot":""}